<?php

// Full file path to the current installation's settings.php file
//// define('SETTINGS_PATH', '/var/www/drupal/sites/default/settings.php');
define('SETTINGS_PATH', '/var/www/html/drupal_gamera_sandbox/sites/gamera/settings.php');
define('WF_OBJECTS_PER_PAGE', 100);

// Maximum number of objects returned for an datastreams CRUD export routine.
define('UPITT_WORKFLOW_SOLR_LIMIT', 10000);

// Permissions.
define('ISLANDORA_WORKFLOW_MANAGE', 'manage upitt workflow');
define('ISLANDORA_WORKFLOW_MANAGE_LOOKUPTABLES', 'manage upitt workflow lookup tables');


/**
 * Implements hook_menu().
 */
function upitt_workflow_menu() {
  return array(
    'admin/islandora/workflow' => array(
      'title' => 'University of Pittsburgh Workflow',
      'description' => 'Change the settings for workflow folders, etc.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_admin_form'),
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
      'file' => 'includes/admin.form.inc',
    ),
    'workflow' => array(
      'title' => t('Workflow'),
      'page callback' => array('upitt_workflow_objects'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/report.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/object/%' => array(
      'title' => t('Workflow Report | Status and Files'),
      'page callback' => array('upitt_workflow_objectreport_form'),
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/report.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/object/%/edit' => array(
      'title' => t('Edit Item'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_item_edit', 2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/item.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/object/%/islandora_ingest' => array(
      'title' => t('Islandora Ingest'),
      'page callback' => 'upitt_workflow_islandora_object_ingest',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/islandora_ingest.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/object/%/METS/edit' => array(
      'title' => t('Edit METS'),
      'page callback' => 'drupal_get_form',
// array('upitt_workflow_editMETS_form'),
      'page arguments' => array('upitt_workflow_editMETS_form', 2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/report.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    // handler to redirect when using the "look up an item by id" search box 
    'workflow/item/get' => array(
      'title' => t('Workflow Item'),
      'page callback' => array('upitt_workflow_redirect_item_get'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/report.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    // handler to redirect to batch when using "look up batch by id"
    'workflow/batch/get' => array(
      'title' => t('Workflow Batch'),
      'page callback' => array('upitt_workflow_redirect_batch_get'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/report.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batch/%' => array(
      'title' => t('Workflow Batch'),
      'page callback' => array('upitt_workflow_batch_detail_form'),
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/batch_detail.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batches/all' => array(
      'title' => t('All Batches'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_batches_form'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/batches.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batches/active' => array(
      'title' => t('Active Batches'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_batches_form'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/batches.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batch/%/islandora_ingest' => array(
      'title' => t('Islandora Ingest'),
      'page callback' => 'upitt_workflow_islandora_ingest',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/islandora_ingest.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batch/export/%' => array(
      'title' => t('Export Batch'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_export_batch_form', 3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/export.batch.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batch/edit/%' => array(
      'title' => t('Edit Batch'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_new_batch_form', 3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/batch.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/batch/new' => array(
      'title' => t('Create New Batch'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_new_batch_form'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'includes/batch.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
    'workflow/collection' => array(
      'title' => t('Workflow Collections (legacy)'), 
      'page callback' => array('upitt_workflow_collections_form'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/collections.inc',
      'access arguments' => array(ISLANDORA_WORKFLOW_MANAGE),
    ),
    'workflow/collection/%' => array(
      'title' => t('Workflow Collections (legacy)'),
      'page callback' => 'upitt_workflow_collections_form',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'file' => 'includes/collections.inc',
      'access arguments' => array(ISLANDORA_WORKFLOW_MANAGE),
    ),

    // ADMIN functions 
    'workflow/workflowadmin' => array(
      'title' => t('Workflow Admin'),
      'page callback' => 'upitt_workflow_workflowadmin',
      'page arguments' => array(3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/workflowadmin.form.inc',
      'access arguments' => array(ISLANDORA_WORKFLOW_MANAGE_LOOKUPTABLES),
      'access callback' => 'upitt_workflow_workflowadmin_manage_access_callback',
    ),
    'workflow/workflowadmin/manage/%' => array(
      'title' => ('Manage Lookup Tables'),
      'page callback' => 'upitt_workflow_admin_manage',
      'page arguments' => array(3),
      'type' => MENU_CALLBACK,
      'file' => 'includes/admin_manage.form.inc',
      'access arguments' => array(ISLANDORA_WORKFLOW_MANAGE_LOOKUPTABLES, 3),
      'access callback' => 'upitt_workflow_workflowadmin_manage_access_callback',
    ),
    'workflow/workflowadmin/manage/%/edit/%' => array(
      'title' => ('Edit Lookup Tables'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_admin_manage_edit', 3, 5),
      'type' => MENU_CALLBACK,
      'file' => 'includes/admin_manage.form.inc',
      'access arguments' => array(ISLANDORA_WORKFLOW_MANAGE_LOOKUPTABLES, 3, 5),
      'access callback' => 'upitt_workflow_workflowadmin_manage_access_callback',
    ),
    // not certain about permissions on this one
    'workflow/status/change' => array(
      'title' => t('Status Change Form'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_workflow_status_change'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/status_change.form.inc',
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),

    // ADMIN functions for - Islandora Object Manage page
    'islandora/object/%islandora_object/manage/audit_upitt_workflow' => array(
      'title' => t('Audit'),
      'page callback' => 'upitt_workflow_object_manage_audit',
      'page arguments' => array(2),
      'type' => MENU_LOCAL_TASK,
      'file' => 'includes/audit_object.form.inc',
      'access arguments' => array(ISLANDORA_WORKFLOW_MANAGE),
      'access callback' => 'upitt_workflow_workflowadmin_manage_access_callback',
    ),
  );
}

/**
 * Implements hook_permission().
 */
function upitt_workflow_permission() {
  return array(
    ISLANDORA_WORKFLOW_MANAGE => array(
      'title' => t('Manage Islandora Workflow objects'),
      'description' => t('Manage Islandora Workflow objects - even batch status.'),
    ),
    ISLANDORA_WORKFLOW_MANAGE_LOOKUPTABLES => array(
      'title' => t('Manage Islandora Workflow Lookup Tables (such as the various pick list values, workflow sequences, etc)'),
      'description' => t('Manage Islandora Workflow lookup tables.'),
    ),
  );
}

function upitt_workflow_theme() {
  return array(
    'upitt_workflow_report' => array(
      'variables' => array('table' => NULL, 'count_rows' => '', 'links' => '', 'post_to' => '', 'collection_filter_choices' => '', 'details' => ''),
      'template' => 'theme/upitt-workflow-report',
    ),
    'upitt_workflow_report_with_detail_table' => array(
      'variables' => array('details' => NULL, 'files_table' => NULL, 'status_table', 'title' => '', 'links' => '', 'post_to' => ''),
      'template' => 'theme/upitt-workflow-report-with-detail-table',
    ),
    'workflow_item_details' => array(
      'variables' => array('details' => NULL, 'edit_item_link' => ''),
      'template' => 'theme/upitt-workflow-details',
    ),
    'upitt_workflow_batches' => array(
      'variables' => array('table' => NULL, 'links' => '', 'post_to' => '', 'count_rows' => 0),
      'template' => 'theme/upitt-workflow-batches',
    ),
    'upitt_workflow_workflowadmin' => array(
      'variables' => array('links' => '', 'task_links' => '', 'breadcrumb' => '', 'markup' => ''),
      'template' => 'theme/upitt-workflow-workflowadmin',
    ),
    'upitt_workflow_collection_page' => array(
      'variables' => array('links' => '', 'breadcrumb' => '', 'table' => NULL, 'count_rows' => 0),
      'template' => 'theme/upitt-workflow-collection-page',
    )
/*
    'page__workflow_batch' => array(
      'template' => 'theme/page--workflow-batch',
      'variables' => array(
        'results' => NULL,
        'elements' => array(),
      ),
    ),
*/

  );
}

/**
 * Helper function to connect to the bigfoot database using the site's settings.php file.
 */
function upitt_workflow_get_databaselink($db_section = 'mysql') {
  global $databases;
  // Use the settings.php file for this install.
  require_once(SETTINGS_PATH);

  module_load_include('inc', 'upitt_workflow', 'includes/utilities');

  if (count($databases) < 1 || !array_key_exists($db_section, $databases['default'])) {
    die('Database settings not found at ' . SETTINGS_PATH);
  }

  $db_host = $databases['default'][$db_section]['host'];
  $db_user = $databases['default'][$db_section]['username'];
  $db_pass = $databases['default'][$db_section]['password'];
  $db_name = $databases['default'][$db_section]['database'];

  $link = mysqli_connect($db_host, $db_user, $db_pass, $db_name);
  //  if (!$link) {
  if (mysqli_connect_errno()) {
    // die('Not connected : ' . mysqli_error($link))
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
  }

  return $link;
}

/**
 * Implements hook_presprocess_theme().
 *
 * This code will remove the sidebar and must check to see whether or not the path is on a user page.
 */
function upitt_workflow_preprocess_page(&$vars) {
  $path = drupal_get_path('module', 'upitt_workflow');
  $item = menu_get_item();
  if (is_array($item)) {
    if ($item['path'] == 'workflow' ||
      (substr($item['path'], 0, 9) == 'workflow/')
//      (($item['path'] == 'node/%' || $item['path'] == 'node/%/edit') && (isset($vars['node'])))
      ) {
      if ($item['path'] == 'workflow/object/%/METS/edit') {
        drupal_add_js('misc/jquery-3.1.1.min.js');
        drupal_add_js('sites/all/libraries/xonomy/xonomy.js');
        drupal_add_css('sites/all/libraries/xonomy/xonomy.css');
        module_load_include('inc', 'upitt_workflow', 'includes/report.form');        
        $xml = upitt_workflow_generate_METS_xml($item['map'][2]);

        $docSpec = upitt_workflow_docSpec();
        drupal_add_js(upitt_workflow_xonomy_editor_javascript_call_script($xml, $docSpec, 'xonomy_editor'), 'inline');
        drupal_add_js('(function ($) {
  Drupal.behaviors.yourBehaviorName = {
    attach: function (context, settings) {
      start_xonomy_editor();
    }
  };
})(jQuery);', 'inline');
      }

      $vars['page']['sidebar_first'] = array();
      $vars['page']['sidebar'] = array();
      drupal_add_js($path . '/js/batch_functions.js');
      drupal_add_css($path . '/style/workflow.css');

      if (isset($vars['node']) && $vars['node']->type == 'workflow_batch') {
        // If the node type is "blog_madness" the template suggestion will be "page--blog-madness.tpl.php".
        $vars['theme_hook_suggestions'][] = 'page__'. $vars['node']->type;
        dpm('page__'. $vars['node']->type . ' variables: ');
        dpm($vars);
      }
    }
    elseif ($item['path'] == 'islandora/object/%/manage/audit_upitt_workflow') {
      drupal_add_css($path . '/style/workflow.css');
    }
  }
}

/**
 * Handler for menu route "/workflow/item/get".  This simply redirects to the correct handler without the "q=" part.
 */
function upitt_workflow_redirect_item_get() {
  $q = isset($_POST['q']) ? $_POST['q'] : NULL;
  if ($q) {
    drupal_goto('/workflow/object/' . $q);
  }
}

/**
 * Handler for menu route "/workflow/batch/get".  This simply redirects to the correct handler without the "q=" part.
 */
function upitt_workflow_redirect_batch_get() {
  $q = isset($_POST['q']) ? $_POST['q'] : NULL;
  if ($q) {
    drupal_goto('/workflow/batch/' . $q);
  }
}

function upitt_workflow_workflowadmin_manage_access_callback($perm, $which_lookup_table = NULL) {
  global $user;
  module_load_include('inc', 'upitt_workflow', 'includes/utilities');

  if ($which_lookup_table) {
    // Only certain values are allowed for the $listname
    $allowed_listnames = upitt_workflow_get_allowed_listnames();
    if (!(array_search(strtolower($which_lookup_table), $allowed_listnames) === FALSE)) {
      return user_access($perm, $user);
    }
    else {
      if (user_access($perm, $user)) {
        drupal_set_message('Bad table name "' . $which_lookup_table . '"');
      }
      return FALSE;
    }
  }
  else {
    return user_access($perm, $user);
  }
}

/**
 * Implements hook_register_jobs().
 *
 * This will be triggered via the islandora_job/includes/utilites function islandora_job_start_worker($pidfile)
 */
function upitt_workflow_islandora_job_register_jobs() {
  $jobs = array(
    'islandora_job_test_job' => array(
      'type' => 'test',
      'module' => 'islandora_job',
      'name' => 'test/islandora_job',
    ),
  );
  return $jobs;
}

/** 
 * Used by various admin-level forms to return the manage table links.
 */
function upitt_workflow_get_listname_manage_links($listname) {
  module_load_include('inc', 'upitt_workflow', 'includes/utilities');

  $possible_listnames = upitt_workflow_get_allowed_listnames();
  foreach ($possible_listnames as $a_listname) {
    if (strtolower($listname) == $a_listname) {
      $links[] = '[' . $a_listname . ']';
    }
    else {
      $links[] = l($a_listname, '/workflow/admin/manage/' . $a_listname);
    }
  }
  return $links;
}

/**
 * Function used by various templates to display a trail of breadcrumbs.
 */
function upitt_workflow_get_breadcrumb_path() {
  // depending on current path, this is built
  $item = menu_get_item();
  if (is_array($item)) {
    $links = array();
    if (substr($item['path'], 0, 9) == 'workflow/') {
      $links[] = l(t('Workflow'), '/workflow');
    }
    if ($item['path'] == 'workflow/admin/manage/%' || 
      $item['path'] == 'workflow/batch/new' || $item['path'] == 'workflow/batch/edit/%'
      ) {
      $links[] = l(t('Workflow Admin'), '/workflow/admin');
    }
    if ($item['path'] == 'workflow/collection/%') {
      $links[] = l(t('Workflow Collections'), '/workflow/collection');
    }
    $links[] = $item['title'];
    return implode(' &raquo; ', $links);
  }
}

function upitt_workflow_filters_clause($in) {
  if (strstr($in, ',')) {
    $p = explode(",", str_replace(" ", "", $in));
    return '(\'' . implode("','",$p) . '\')';
  } else {
    return '(\'' . $in . '\')';
  }
}

/**
 * Implements hook_islandora_batch_process_finished().
 *
 * Delete successfully ingested batch sets.
 */
function upitt_workflow_islandora_batch_process_finished($sets) {
  // Look at the object - and delete the related temporary files that were needed for this object.
  module_load_include('inc', 'upitt_workflow', 'includes/utilities');

  $objects = upitt_workflow_get_objects_from_set($sets);
  error_log('set = ' .print_r($objects, true));
  error_log('in hook upitt_workflow_islandora_batch_process_finished - ready to delete files for object');

/*  $auto_remove = variable_get('islandora_batch_auto_remove_set', FALSE);
  if ($auto_remove) {
    if (!empty($sets)) {
      module_load_include('inc', 'islandora_batch', 'includes/db');
      foreach ($sets as $set) {
        // Delete set and associated queued items.
        islandora_batch_delete_set($set);
        // Set a message that the batch set was removed.
        drupal_set_message(t('The batch set (@set_id) has been processed successfully and has been automatically removed from the queue.', array(
          '@set_id' => $set,
        )));
      }
    }
  }
*/
}

